Prefix(:=<http://www.obdasystems.com/books/>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)

Ontology(<http://www.obdasystems.com/books/>

<http://www.obdasystems.com/books/1.0>
Declaration(Class(:AudioBook))
Declaration(Class(:Author))
Declaration(Class(:Book))
Declaration(Class(:E_Book))
Declaration(Class(:EconomicEdition))
Declaration(Class(:Edition))
Declaration(Class(:Editor))
Declaration(Class(:EmergingWriter))
Declaration(Class(:Fiction))
Declaration(Class(:Hardcover))
Declaration(Class(:Non_fiction))
Declaration(Class(:Paperback))
Declaration(Class(:PrintedBook))
Declaration(Class(:Publisher))
Declaration(Class(:SpecialEdition))
Declaration(Class(:UneditedBook))
Declaration(ObjectProperty(:editedBy))
Declaration(ObjectProperty(:hasEdition))
Declaration(ObjectProperty(:hasPublisher))
Declaration(ObjectProperty(:writtenBy))
Declaration(DataProperty(:ISBN))
Declaration(DataProperty(:dateOfPublication))
Declaration(DataProperty(:date_of_birth))
Declaration(DataProperty(:date_of_death))
Declaration(DataProperty(:discounted_price))
Declaration(DataProperty(:editionNumber))
Declaration(DataProperty(:genre))
Declaration(DataProperty(:name))
Declaration(DataProperty(:number_of_pages))
Declaration(DataProperty(:pen_name))
Declaration(DataProperty(:publisher_code))
Declaration(DataProperty(:sex))
Declaration(DataProperty(:title))
Declaration(Datatype(xsd:dateTime))
Declaration(Datatype(xsd:string))
FunctionalObjectProperty(:editedBy)
ObjectPropertyDomain(:editedBy :Edition)
ObjectPropertyRange(:editedBy :Editor)
InverseFunctionalObjectProperty(:hasEdition)
ObjectPropertyDomain(:hasEdition :Book)
ObjectPropertyRange(:hasEdition :Edition)
ObjectPropertyDomain(:hasPublisher :Book)
ObjectPropertyRange(:hasPublisher :Publisher)
ObjectPropertyDomain(:writtenBy :Book)
ObjectPropertyRange(:writtenBy :Author)
FunctionalDataProperty(:ISBN)
DataPropertyDomain(:ISBN :Edition)
FunctionalDataProperty(:dateOfPublication)
DataPropertyDomain(:dateOfPublication :Edition)
FunctionalDataProperty(:date_of_birth)
DataPropertyDomain(:date_of_birth :Author)
DataPropertyRange(:date_of_birth xsd:dateTime)
FunctionalDataProperty(:date_of_death)
DataPropertyDomain(:date_of_death :Author)
DataPropertyRange(:date_of_death xsd:dateTime)
FunctionalDataProperty(:editionNumber)
DataPropertyDomain(:editionNumber :Edition)
FunctionalDataProperty(:genre)
DataPropertyDomain(:genre :Book)
FunctionalDataProperty(:name)
DataPropertyRange(:name xsd:string)
FunctionalDataProperty(:number_of_pages)
DataPropertyDomain(:number_of_pages :Edition)
DataPropertyDomain(:pen_name :Author)
FunctionalDataProperty(:publisher_code)
DataPropertyDomain(:publisher_code :Publisher)
DataPropertyRange(:publisher_code xsd:string)
FunctionalDataProperty(:sex)
DataPropertyDomain(:sex :Author)
FunctionalDataProperty(:title)
DataPropertyDomain(:title :Book)
EquivalentClasses(:Author ObjectSomeValuesFrom(ObjectInverseOf(:writtenBy) owl:Thing))
EquivalentClasses(:Author DataSomeValuesFrom(:date_of_birth rdfs:Literal))
EquivalentClasses(:Author DataSomeValuesFrom(:sex rdfs:Literal))
SubClassOf(:Author DataSomeValuesFrom(:name rdfs:Literal))
EquivalentClasses(:Book ObjectUnionOf(:Fiction :Non_fiction))
EquivalentClasses(:Book ObjectSomeValuesFrom(:hasPublisher owl:Thing))
EquivalentClasses(:Book ObjectSomeValuesFrom(:writtenBy owl:Thing))
EquivalentClasses(:Book DataSomeValuesFrom(:genre rdfs:Literal))
EquivalentClasses(:Book DataSomeValuesFrom(:title rdfs:Literal))
SubClassOf(:E_Book ObjectAllValuesFrom(:hasEdition :EconomicEdition))
SubClassOf(:EconomicEdition DataSomeValuesFrom(:discounted_price rdfs:Literal))
EquivalentClasses(:Edition ObjectSomeValuesFrom(:editedBy owl:Thing))
EquivalentClasses(:Edition ObjectSomeValuesFrom(ObjectInverseOf(:hasEdition) owl:Thing))
EquivalentClasses(:Edition DataSomeValuesFrom(:ISBN rdfs:Literal))
EquivalentClasses(:Edition DataSomeValuesFrom(:dateOfPublication rdfs:Literal))
EquivalentClasses(:Edition DataSomeValuesFrom(:editionNumber rdfs:Literal))
EquivalentClasses(:Editor ObjectSomeValuesFrom(ObjectInverseOf(:editedBy) owl:Thing))
SubClassOf(:Editor DataSomeValuesFrom(:name rdfs:Literal))
SubClassOf(:EmergingWriter :Author)
SubClassOf(:EmergingWriter ObjectMaxCardinality(1 ObjectInverseOf(:writtenBy)))
DisjointClasses(:Fiction :Non_fiction)
SubClassOf(:Paperback :EconomicEdition)
EquivalentClasses(:Publisher ObjectSomeValuesFrom(ObjectInverseOf(:hasPublisher) owl:Thing))
EquivalentClasses(:Publisher DataSomeValuesFrom(:publisher_code rdfs:Literal))
SubClassOf(:Publisher DataSomeValuesFrom(:name rdfs:Literal))
SubClassOf(:UneditedBook :Book)
DisjointClasses(:UneditedBook ObjectSomeValuesFrom(:hasEdition owl:Thing))
SubClassOf(ObjectUnionOf(:AudioBook :E_Book :PrintedBook) :Book)
SubClassOf(ObjectUnionOf(:EconomicEdition :Hardcover :SpecialEdition) :Edition)
DisjointClasses(:AudioBook :E_Book :PrintedBook)
DisjointClasses(:EconomicEdition :Hardcover :SpecialEdition)
)